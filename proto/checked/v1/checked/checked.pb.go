// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/checked/v1/checked.proto

package checked

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import _struct "github.com/golang/protobuf/ptypes/struct"
import syntax "github.com/google/cel-spec/proto/v1/syntax"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type_PrimitiveType int32

const (
	Type_PRIMITIVE_TYPE_UNSPECIFIED Type_PrimitiveType = 0
	Type_BOOL                       Type_PrimitiveType = 1
	Type_INT64                      Type_PrimitiveType = 2
	Type_UINT64                     Type_PrimitiveType = 3
	Type_DOUBLE                     Type_PrimitiveType = 4
	Type_STRING                     Type_PrimitiveType = 5
	Type_BYTES                      Type_PrimitiveType = 6
)

var Type_PrimitiveType_name = map[int32]string{
	0: "PRIMITIVE_TYPE_UNSPECIFIED",
	1: "BOOL",
	2: "INT64",
	3: "UINT64",
	4: "DOUBLE",
	5: "STRING",
	6: "BYTES",
}
var Type_PrimitiveType_value = map[string]int32{
	"PRIMITIVE_TYPE_UNSPECIFIED": 0,
	"BOOL":   1,
	"INT64":  2,
	"UINT64": 3,
	"DOUBLE": 4,
	"STRING": 5,
	"BYTES":  6,
}

func (x Type_PrimitiveType) String() string {
	return proto.EnumName(Type_PrimitiveType_name, int32(x))
}
func (Type_PrimitiveType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{1, 0}
}

type Type_WellKnownType int32

const (
	Type_WELL_KNOWN_TYPE_UNSPECIFIED Type_WellKnownType = 0
	Type_ANY                         Type_WellKnownType = 1
	Type_TIMESTAMP                   Type_WellKnownType = 2
	Type_DURATION                    Type_WellKnownType = 3
)

var Type_WellKnownType_name = map[int32]string{
	0: "WELL_KNOWN_TYPE_UNSPECIFIED",
	1: "ANY",
	2: "TIMESTAMP",
	3: "DURATION",
}
var Type_WellKnownType_value = map[string]int32{
	"WELL_KNOWN_TYPE_UNSPECIFIED": 0,
	"ANY":       1,
	"TIMESTAMP": 2,
	"DURATION":  3,
}

func (x Type_WellKnownType) String() string {
	return proto.EnumName(Type_WellKnownType_name, int32(x))
}
func (Type_WellKnownType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{1, 1}
}

type CheckedExpr struct {
	ReferenceMap         map[int64]*Reference `protobuf:"bytes,2,rep,name=reference_map,json=referenceMap" json:"reference_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TypeMap              map[int64]*Type      `protobuf:"bytes,3,rep,name=type_map,json=typeMap" json:"type_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	SourceInfo           *syntax.SourceInfo   `protobuf:"bytes,5,opt,name=source_info,json=sourceInfo" json:"source_info,omitempty"`
	Expr                 *syntax.Expr         `protobuf:"bytes,4,opt,name=expr" json:"expr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CheckedExpr) Reset()         { *m = CheckedExpr{} }
func (m *CheckedExpr) String() string { return proto.CompactTextString(m) }
func (*CheckedExpr) ProtoMessage()    {}
func (*CheckedExpr) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{0}
}
func (m *CheckedExpr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckedExpr.Unmarshal(m, b)
}
func (m *CheckedExpr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckedExpr.Marshal(b, m, deterministic)
}
func (dst *CheckedExpr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckedExpr.Merge(dst, src)
}
func (m *CheckedExpr) XXX_Size() int {
	return xxx_messageInfo_CheckedExpr.Size(m)
}
func (m *CheckedExpr) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckedExpr.DiscardUnknown(m)
}

var xxx_messageInfo_CheckedExpr proto.InternalMessageInfo

func (m *CheckedExpr) GetReferenceMap() map[int64]*Reference {
	if m != nil {
		return m.ReferenceMap
	}
	return nil
}

func (m *CheckedExpr) GetTypeMap() map[int64]*Type {
	if m != nil {
		return m.TypeMap
	}
	return nil
}

func (m *CheckedExpr) GetSourceInfo() *syntax.SourceInfo {
	if m != nil {
		return m.SourceInfo
	}
	return nil
}

func (m *CheckedExpr) GetExpr() *syntax.Expr {
	if m != nil {
		return m.Expr
	}
	return nil
}

type Type struct {
	// Types that are valid to be assigned to TypeKind:
	//	*Type_Dyn
	//	*Type_Null
	//	*Type_Primitive
	//	*Type_Wrapper
	//	*Type_WellKnown
	//	*Type_ListType_
	//	*Type_MapType_
	//	*Type_Function
	//	*Type_MessageType
	//	*Type_TypeParam
	//	*Type_Type
	//	*Type_Error
	//	*Type_AbstractType_
	TypeKind             isType_TypeKind `protobuf_oneof:"type_kind"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Type) Reset()         { *m = Type{} }
func (m *Type) String() string { return proto.CompactTextString(m) }
func (*Type) ProtoMessage()    {}
func (*Type) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{1}
}
func (m *Type) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Type.Unmarshal(m, b)
}
func (m *Type) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Type.Marshal(b, m, deterministic)
}
func (dst *Type) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Type.Merge(dst, src)
}
func (m *Type) XXX_Size() int {
	return xxx_messageInfo_Type.Size(m)
}
func (m *Type) XXX_DiscardUnknown() {
	xxx_messageInfo_Type.DiscardUnknown(m)
}

var xxx_messageInfo_Type proto.InternalMessageInfo

type isType_TypeKind interface {
	isType_TypeKind()
}

type Type_Dyn struct {
	Dyn *empty.Empty `protobuf:"bytes,1,opt,name=dyn,oneof"`
}
type Type_Null struct {
	Null _struct.NullValue `protobuf:"varint,2,opt,name=null,enum=google.protobuf.NullValue,oneof"`
}
type Type_Primitive struct {
	Primitive Type_PrimitiveType `protobuf:"varint,3,opt,name=primitive,enum=google.api.expr.checked.v1.Type_PrimitiveType,oneof"`
}
type Type_Wrapper struct {
	Wrapper Type_PrimitiveType `protobuf:"varint,4,opt,name=wrapper,enum=google.api.expr.checked.v1.Type_PrimitiveType,oneof"`
}
type Type_WellKnown struct {
	WellKnown Type_WellKnownType `protobuf:"varint,5,opt,name=well_known,json=wellKnown,enum=google.api.expr.checked.v1.Type_WellKnownType,oneof"`
}
type Type_ListType_ struct {
	ListType *Type_ListType `protobuf:"bytes,6,opt,name=list_type,json=listType,oneof"`
}
type Type_MapType_ struct {
	MapType *Type_MapType `protobuf:"bytes,7,opt,name=map_type,json=mapType,oneof"`
}
type Type_Function struct {
	Function *Type_FunctionType `protobuf:"bytes,8,opt,name=function,oneof"`
}
type Type_MessageType struct {
	MessageType string `protobuf:"bytes,9,opt,name=message_type,json=messageType,oneof"`
}
type Type_TypeParam struct {
	TypeParam string `protobuf:"bytes,10,opt,name=type_param,json=typeParam,oneof"`
}
type Type_Type struct {
	Type *Type `protobuf:"bytes,11,opt,name=type,oneof"`
}
type Type_Error struct {
	Error *empty.Empty `protobuf:"bytes,12,opt,name=error,oneof"`
}
type Type_AbstractType_ struct {
	AbstractType *Type_AbstractType `protobuf:"bytes,14,opt,name=abstract_type,json=abstractType,oneof"`
}

func (*Type_Dyn) isType_TypeKind()           {}
func (*Type_Null) isType_TypeKind()          {}
func (*Type_Primitive) isType_TypeKind()     {}
func (*Type_Wrapper) isType_TypeKind()       {}
func (*Type_WellKnown) isType_TypeKind()     {}
func (*Type_ListType_) isType_TypeKind()     {}
func (*Type_MapType_) isType_TypeKind()      {}
func (*Type_Function) isType_TypeKind()      {}
func (*Type_MessageType) isType_TypeKind()   {}
func (*Type_TypeParam) isType_TypeKind()     {}
func (*Type_Type) isType_TypeKind()          {}
func (*Type_Error) isType_TypeKind()         {}
func (*Type_AbstractType_) isType_TypeKind() {}

func (m *Type) GetTypeKind() isType_TypeKind {
	if m != nil {
		return m.TypeKind
	}
	return nil
}

func (m *Type) GetDyn() *empty.Empty {
	if x, ok := m.GetTypeKind().(*Type_Dyn); ok {
		return x.Dyn
	}
	return nil
}

func (m *Type) GetNull() _struct.NullValue {
	if x, ok := m.GetTypeKind().(*Type_Null); ok {
		return x.Null
	}
	return _struct.NullValue_NULL_VALUE
}

func (m *Type) GetPrimitive() Type_PrimitiveType {
	if x, ok := m.GetTypeKind().(*Type_Primitive); ok {
		return x.Primitive
	}
	return Type_PRIMITIVE_TYPE_UNSPECIFIED
}

func (m *Type) GetWrapper() Type_PrimitiveType {
	if x, ok := m.GetTypeKind().(*Type_Wrapper); ok {
		return x.Wrapper
	}
	return Type_PRIMITIVE_TYPE_UNSPECIFIED
}

func (m *Type) GetWellKnown() Type_WellKnownType {
	if x, ok := m.GetTypeKind().(*Type_WellKnown); ok {
		return x.WellKnown
	}
	return Type_WELL_KNOWN_TYPE_UNSPECIFIED
}

func (m *Type) GetListType() *Type_ListType {
	if x, ok := m.GetTypeKind().(*Type_ListType_); ok {
		return x.ListType
	}
	return nil
}

func (m *Type) GetMapType() *Type_MapType {
	if x, ok := m.GetTypeKind().(*Type_MapType_); ok {
		return x.MapType
	}
	return nil
}

func (m *Type) GetFunction() *Type_FunctionType {
	if x, ok := m.GetTypeKind().(*Type_Function); ok {
		return x.Function
	}
	return nil
}

func (m *Type) GetMessageType() string {
	if x, ok := m.GetTypeKind().(*Type_MessageType); ok {
		return x.MessageType
	}
	return ""
}

func (m *Type) GetTypeParam() string {
	if x, ok := m.GetTypeKind().(*Type_TypeParam); ok {
		return x.TypeParam
	}
	return ""
}

func (m *Type) GetType() *Type {
	if x, ok := m.GetTypeKind().(*Type_Type); ok {
		return x.Type
	}
	return nil
}

func (m *Type) GetError() *empty.Empty {
	if x, ok := m.GetTypeKind().(*Type_Error); ok {
		return x.Error
	}
	return nil
}

func (m *Type) GetAbstractType() *Type_AbstractType {
	if x, ok := m.GetTypeKind().(*Type_AbstractType_); ok {
		return x.AbstractType
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Type) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Type_OneofMarshaler, _Type_OneofUnmarshaler, _Type_OneofSizer, []interface{}{
		(*Type_Dyn)(nil),
		(*Type_Null)(nil),
		(*Type_Primitive)(nil),
		(*Type_Wrapper)(nil),
		(*Type_WellKnown)(nil),
		(*Type_ListType_)(nil),
		(*Type_MapType_)(nil),
		(*Type_Function)(nil),
		(*Type_MessageType)(nil),
		(*Type_TypeParam)(nil),
		(*Type_Type)(nil),
		(*Type_Error)(nil),
		(*Type_AbstractType_)(nil),
	}
}

func _Type_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Type)
	// type_kind
	switch x := m.TypeKind.(type) {
	case *Type_Dyn:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dyn); err != nil {
			return err
		}
	case *Type_Null:
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Null))
	case *Type_Primitive:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Primitive))
	case *Type_Wrapper:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Wrapper))
	case *Type_WellKnown:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.WellKnown))
	case *Type_ListType_:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ListType); err != nil {
			return err
		}
	case *Type_MapType_:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MapType); err != nil {
			return err
		}
	case *Type_Function:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Function); err != nil {
			return err
		}
	case *Type_MessageType:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.MessageType)
	case *Type_TypeParam:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.TypeParam)
	case *Type_Type:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Type); err != nil {
			return err
		}
	case *Type_Error:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case *Type_AbstractType_:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AbstractType); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Type.TypeKind has unexpected type %T", x)
	}
	return nil
}

func _Type_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Type)
	switch tag {
	case 1: // type_kind.dyn
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(empty.Empty)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_Dyn{msg}
		return true, err
	case 2: // type_kind.null
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TypeKind = &Type_Null{_struct.NullValue(x)}
		return true, err
	case 3: // type_kind.primitive
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TypeKind = &Type_Primitive{Type_PrimitiveType(x)}
		return true, err
	case 4: // type_kind.wrapper
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TypeKind = &Type_Wrapper{Type_PrimitiveType(x)}
		return true, err
	case 5: // type_kind.well_known
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.TypeKind = &Type_WellKnown{Type_WellKnownType(x)}
		return true, err
	case 6: // type_kind.list_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Type_ListType)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_ListType_{msg}
		return true, err
	case 7: // type_kind.map_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Type_MapType)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_MapType_{msg}
		return true, err
	case 8: // type_kind.function
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Type_FunctionType)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_Function{msg}
		return true, err
	case 9: // type_kind.message_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.TypeKind = &Type_MessageType{x}
		return true, err
	case 10: // type_kind.type_param
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.TypeKind = &Type_TypeParam{x}
		return true, err
	case 11: // type_kind.type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Type)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_Type{msg}
		return true, err
	case 12: // type_kind.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(empty.Empty)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_Error{msg}
		return true, err
	case 14: // type_kind.abstract_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Type_AbstractType)
		err := b.DecodeMessage(msg)
		m.TypeKind = &Type_AbstractType_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Type_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Type)
	// type_kind
	switch x := m.TypeKind.(type) {
	case *Type_Dyn:
		s := proto.Size(x.Dyn)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_Null:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Null))
	case *Type_Primitive:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Primitive))
	case *Type_Wrapper:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Wrapper))
	case *Type_WellKnown:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.WellKnown))
	case *Type_ListType_:
		s := proto.Size(x.ListType)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_MapType_:
		s := proto.Size(x.MapType)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_Function:
		s := proto.Size(x.Function)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_MessageType:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.MessageType)))
		n += len(x.MessageType)
	case *Type_TypeParam:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.TypeParam)))
		n += len(x.TypeParam)
	case *Type_Type:
		s := proto.Size(x.Type)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_Error:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Type_AbstractType_:
		s := proto.Size(x.AbstractType)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Type_ListType struct {
	ElemType             *Type    `protobuf:"bytes,1,opt,name=elem_type,json=elemType" json:"elem_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Type_ListType) Reset()         { *m = Type_ListType{} }
func (m *Type_ListType) String() string { return proto.CompactTextString(m) }
func (*Type_ListType) ProtoMessage()    {}
func (*Type_ListType) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{1, 0}
}
func (m *Type_ListType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Type_ListType.Unmarshal(m, b)
}
func (m *Type_ListType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Type_ListType.Marshal(b, m, deterministic)
}
func (dst *Type_ListType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Type_ListType.Merge(dst, src)
}
func (m *Type_ListType) XXX_Size() int {
	return xxx_messageInfo_Type_ListType.Size(m)
}
func (m *Type_ListType) XXX_DiscardUnknown() {
	xxx_messageInfo_Type_ListType.DiscardUnknown(m)
}

var xxx_messageInfo_Type_ListType proto.InternalMessageInfo

func (m *Type_ListType) GetElemType() *Type {
	if m != nil {
		return m.ElemType
	}
	return nil
}

type Type_MapType struct {
	KeyType              *Type    `protobuf:"bytes,1,opt,name=key_type,json=keyType" json:"key_type,omitempty"`
	ValueType            *Type    `protobuf:"bytes,2,opt,name=value_type,json=valueType" json:"value_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Type_MapType) Reset()         { *m = Type_MapType{} }
func (m *Type_MapType) String() string { return proto.CompactTextString(m) }
func (*Type_MapType) ProtoMessage()    {}
func (*Type_MapType) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{1, 1}
}
func (m *Type_MapType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Type_MapType.Unmarshal(m, b)
}
func (m *Type_MapType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Type_MapType.Marshal(b, m, deterministic)
}
func (dst *Type_MapType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Type_MapType.Merge(dst, src)
}
func (m *Type_MapType) XXX_Size() int {
	return xxx_messageInfo_Type_MapType.Size(m)
}
func (m *Type_MapType) XXX_DiscardUnknown() {
	xxx_messageInfo_Type_MapType.DiscardUnknown(m)
}

var xxx_messageInfo_Type_MapType proto.InternalMessageInfo

func (m *Type_MapType) GetKeyType() *Type {
	if m != nil {
		return m.KeyType
	}
	return nil
}

func (m *Type_MapType) GetValueType() *Type {
	if m != nil {
		return m.ValueType
	}
	return nil
}

type Type_FunctionType struct {
	ResultType           *Type    `protobuf:"bytes,1,opt,name=result_type,json=resultType" json:"result_type,omitempty"`
	ArgTypes             []*Type  `protobuf:"bytes,2,rep,name=arg_types,json=argTypes" json:"arg_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Type_FunctionType) Reset()         { *m = Type_FunctionType{} }
func (m *Type_FunctionType) String() string { return proto.CompactTextString(m) }
func (*Type_FunctionType) ProtoMessage()    {}
func (*Type_FunctionType) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{1, 2}
}
func (m *Type_FunctionType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Type_FunctionType.Unmarshal(m, b)
}
func (m *Type_FunctionType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Type_FunctionType.Marshal(b, m, deterministic)
}
func (dst *Type_FunctionType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Type_FunctionType.Merge(dst, src)
}
func (m *Type_FunctionType) XXX_Size() int {
	return xxx_messageInfo_Type_FunctionType.Size(m)
}
func (m *Type_FunctionType) XXX_DiscardUnknown() {
	xxx_messageInfo_Type_FunctionType.DiscardUnknown(m)
}

var xxx_messageInfo_Type_FunctionType proto.InternalMessageInfo

func (m *Type_FunctionType) GetResultType() *Type {
	if m != nil {
		return m.ResultType
	}
	return nil
}

func (m *Type_FunctionType) GetArgTypes() []*Type {
	if m != nil {
		return m.ArgTypes
	}
	return nil
}

type Type_AbstractType struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ParameterTypes       []*Type  `protobuf:"bytes,2,rep,name=parameter_types,json=parameterTypes" json:"parameter_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Type_AbstractType) Reset()         { *m = Type_AbstractType{} }
func (m *Type_AbstractType) String() string { return proto.CompactTextString(m) }
func (*Type_AbstractType) ProtoMessage()    {}
func (*Type_AbstractType) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{1, 3}
}
func (m *Type_AbstractType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Type_AbstractType.Unmarshal(m, b)
}
func (m *Type_AbstractType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Type_AbstractType.Marshal(b, m, deterministic)
}
func (dst *Type_AbstractType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Type_AbstractType.Merge(dst, src)
}
func (m *Type_AbstractType) XXX_Size() int {
	return xxx_messageInfo_Type_AbstractType.Size(m)
}
func (m *Type_AbstractType) XXX_DiscardUnknown() {
	xxx_messageInfo_Type_AbstractType.DiscardUnknown(m)
}

var xxx_messageInfo_Type_AbstractType proto.InternalMessageInfo

func (m *Type_AbstractType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Type_AbstractType) GetParameterTypes() []*Type {
	if m != nil {
		return m.ParameterTypes
	}
	return nil
}

type Decl struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Types that are valid to be assigned to DeclKind:
	//	*Decl_Ident
	//	*Decl_Function
	DeclKind             isDecl_DeclKind `protobuf_oneof:"decl_kind"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Decl) Reset()         { *m = Decl{} }
func (m *Decl) String() string { return proto.CompactTextString(m) }
func (*Decl) ProtoMessage()    {}
func (*Decl) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{2}
}
func (m *Decl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Decl.Unmarshal(m, b)
}
func (m *Decl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Decl.Marshal(b, m, deterministic)
}
func (dst *Decl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Decl.Merge(dst, src)
}
func (m *Decl) XXX_Size() int {
	return xxx_messageInfo_Decl.Size(m)
}
func (m *Decl) XXX_DiscardUnknown() {
	xxx_messageInfo_Decl.DiscardUnknown(m)
}

var xxx_messageInfo_Decl proto.InternalMessageInfo

type isDecl_DeclKind interface {
	isDecl_DeclKind()
}

type Decl_Ident struct {
	Ident *Decl_IdentDecl `protobuf:"bytes,2,opt,name=ident,oneof"`
}
type Decl_Function struct {
	Function *Decl_FunctionDecl `protobuf:"bytes,3,opt,name=function,oneof"`
}

func (*Decl_Ident) isDecl_DeclKind()    {}
func (*Decl_Function) isDecl_DeclKind() {}

func (m *Decl) GetDeclKind() isDecl_DeclKind {
	if m != nil {
		return m.DeclKind
	}
	return nil
}

func (m *Decl) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Decl) GetIdent() *Decl_IdentDecl {
	if x, ok := m.GetDeclKind().(*Decl_Ident); ok {
		return x.Ident
	}
	return nil
}

func (m *Decl) GetFunction() *Decl_FunctionDecl {
	if x, ok := m.GetDeclKind().(*Decl_Function); ok {
		return x.Function
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Decl) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Decl_OneofMarshaler, _Decl_OneofUnmarshaler, _Decl_OneofSizer, []interface{}{
		(*Decl_Ident)(nil),
		(*Decl_Function)(nil),
	}
}

func _Decl_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Decl)
	// decl_kind
	switch x := m.DeclKind.(type) {
	case *Decl_Ident:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ident); err != nil {
			return err
		}
	case *Decl_Function:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Function); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Decl.DeclKind has unexpected type %T", x)
	}
	return nil
}

func _Decl_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Decl)
	switch tag {
	case 2: // decl_kind.ident
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decl_IdentDecl)
		err := b.DecodeMessage(msg)
		m.DeclKind = &Decl_Ident{msg}
		return true, err
	case 3: // decl_kind.function
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Decl_FunctionDecl)
		err := b.DecodeMessage(msg)
		m.DeclKind = &Decl_Function{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Decl_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Decl)
	// decl_kind
	switch x := m.DeclKind.(type) {
	case *Decl_Ident:
		s := proto.Size(x.Ident)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Decl_Function:
		s := proto.Size(x.Function)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Decl_IdentDecl struct {
	Type                 *Type           `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Value                *syntax.Literal `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Doc                  string          `protobuf:"bytes,3,opt,name=doc" json:"doc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Decl_IdentDecl) Reset()         { *m = Decl_IdentDecl{} }
func (m *Decl_IdentDecl) String() string { return proto.CompactTextString(m) }
func (*Decl_IdentDecl) ProtoMessage()    {}
func (*Decl_IdentDecl) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{2, 0}
}
func (m *Decl_IdentDecl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Decl_IdentDecl.Unmarshal(m, b)
}
func (m *Decl_IdentDecl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Decl_IdentDecl.Marshal(b, m, deterministic)
}
func (dst *Decl_IdentDecl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Decl_IdentDecl.Merge(dst, src)
}
func (m *Decl_IdentDecl) XXX_Size() int {
	return xxx_messageInfo_Decl_IdentDecl.Size(m)
}
func (m *Decl_IdentDecl) XXX_DiscardUnknown() {
	xxx_messageInfo_Decl_IdentDecl.DiscardUnknown(m)
}

var xxx_messageInfo_Decl_IdentDecl proto.InternalMessageInfo

func (m *Decl_IdentDecl) GetType() *Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Decl_IdentDecl) GetValue() *syntax.Literal {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Decl_IdentDecl) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

type Decl_FunctionDecl struct {
	Overloads            []*Decl_FunctionDecl_Overload `protobuf:"bytes,1,rep,name=overloads" json:"overloads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Decl_FunctionDecl) Reset()         { *m = Decl_FunctionDecl{} }
func (m *Decl_FunctionDecl) String() string { return proto.CompactTextString(m) }
func (*Decl_FunctionDecl) ProtoMessage()    {}
func (*Decl_FunctionDecl) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{2, 1}
}
func (m *Decl_FunctionDecl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Decl_FunctionDecl.Unmarshal(m, b)
}
func (m *Decl_FunctionDecl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Decl_FunctionDecl.Marshal(b, m, deterministic)
}
func (dst *Decl_FunctionDecl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Decl_FunctionDecl.Merge(dst, src)
}
func (m *Decl_FunctionDecl) XXX_Size() int {
	return xxx_messageInfo_Decl_FunctionDecl.Size(m)
}
func (m *Decl_FunctionDecl) XXX_DiscardUnknown() {
	xxx_messageInfo_Decl_FunctionDecl.DiscardUnknown(m)
}

var xxx_messageInfo_Decl_FunctionDecl proto.InternalMessageInfo

func (m *Decl_FunctionDecl) GetOverloads() []*Decl_FunctionDecl_Overload {
	if m != nil {
		return m.Overloads
	}
	return nil
}

type Decl_FunctionDecl_Overload struct {
	OverloadId           string   `protobuf:"bytes,1,opt,name=overload_id,json=overloadId" json:"overload_id,omitempty"`
	Params               []*Type  `protobuf:"bytes,2,rep,name=params" json:"params,omitempty"`
	TypeParams           []string `protobuf:"bytes,3,rep,name=type_params,json=typeParams" json:"type_params,omitempty"`
	ResultType           *Type    `protobuf:"bytes,4,opt,name=result_type,json=resultType" json:"result_type,omitempty"`
	IsInstanceFunction   bool     `protobuf:"varint,5,opt,name=is_instance_function,json=isInstanceFunction" json:"is_instance_function,omitempty"`
	Doc                  string   `protobuf:"bytes,6,opt,name=doc" json:"doc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Decl_FunctionDecl_Overload) Reset()         { *m = Decl_FunctionDecl_Overload{} }
func (m *Decl_FunctionDecl_Overload) String() string { return proto.CompactTextString(m) }
func (*Decl_FunctionDecl_Overload) ProtoMessage()    {}
func (*Decl_FunctionDecl_Overload) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{2, 1, 0}
}
func (m *Decl_FunctionDecl_Overload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Decl_FunctionDecl_Overload.Unmarshal(m, b)
}
func (m *Decl_FunctionDecl_Overload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Decl_FunctionDecl_Overload.Marshal(b, m, deterministic)
}
func (dst *Decl_FunctionDecl_Overload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Decl_FunctionDecl_Overload.Merge(dst, src)
}
func (m *Decl_FunctionDecl_Overload) XXX_Size() int {
	return xxx_messageInfo_Decl_FunctionDecl_Overload.Size(m)
}
func (m *Decl_FunctionDecl_Overload) XXX_DiscardUnknown() {
	xxx_messageInfo_Decl_FunctionDecl_Overload.DiscardUnknown(m)
}

var xxx_messageInfo_Decl_FunctionDecl_Overload proto.InternalMessageInfo

func (m *Decl_FunctionDecl_Overload) GetOverloadId() string {
	if m != nil {
		return m.OverloadId
	}
	return ""
}

func (m *Decl_FunctionDecl_Overload) GetParams() []*Type {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *Decl_FunctionDecl_Overload) GetTypeParams() []string {
	if m != nil {
		return m.TypeParams
	}
	return nil
}

func (m *Decl_FunctionDecl_Overload) GetResultType() *Type {
	if m != nil {
		return m.ResultType
	}
	return nil
}

func (m *Decl_FunctionDecl_Overload) GetIsInstanceFunction() bool {
	if m != nil {
		return m.IsInstanceFunction
	}
	return false
}

func (m *Decl_FunctionDecl_Overload) GetDoc() string {
	if m != nil {
		return m.Doc
	}
	return ""
}

type Reference struct {
	Name                 string          `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OverloadId           []string        `protobuf:"bytes,3,rep,name=overload_id,json=overloadId" json:"overload_id,omitempty"`
	Value                *syntax.Literal `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Reference) Reset()         { *m = Reference{} }
func (m *Reference) String() string { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()    {}
func (*Reference) Descriptor() ([]byte, []int) {
	return fileDescriptor_checked_21cbb30c47e02611, []int{3}
}
func (m *Reference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reference.Unmarshal(m, b)
}
func (m *Reference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reference.Marshal(b, m, deterministic)
}
func (dst *Reference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reference.Merge(dst, src)
}
func (m *Reference) XXX_Size() int {
	return xxx_messageInfo_Reference.Size(m)
}
func (m *Reference) XXX_DiscardUnknown() {
	xxx_messageInfo_Reference.DiscardUnknown(m)
}

var xxx_messageInfo_Reference proto.InternalMessageInfo

func (m *Reference) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Reference) GetOverloadId() []string {
	if m != nil {
		return m.OverloadId
	}
	return nil
}

func (m *Reference) GetValue() *syntax.Literal {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*CheckedExpr)(nil), "google.api.expr.checked.v1.CheckedExpr")
	proto.RegisterMapType((map[int64]*Reference)(nil), "google.api.expr.checked.v1.CheckedExpr.ReferenceMapEntry")
	proto.RegisterMapType((map[int64]*Type)(nil), "google.api.expr.checked.v1.CheckedExpr.TypeMapEntry")
	proto.RegisterType((*Type)(nil), "google.api.expr.checked.v1.Type")
	proto.RegisterType((*Type_ListType)(nil), "google.api.expr.checked.v1.Type.ListType")
	proto.RegisterType((*Type_MapType)(nil), "google.api.expr.checked.v1.Type.MapType")
	proto.RegisterType((*Type_FunctionType)(nil), "google.api.expr.checked.v1.Type.FunctionType")
	proto.RegisterType((*Type_AbstractType)(nil), "google.api.expr.checked.v1.Type.AbstractType")
	proto.RegisterType((*Decl)(nil), "google.api.expr.checked.v1.Decl")
	proto.RegisterType((*Decl_IdentDecl)(nil), "google.api.expr.checked.v1.Decl.IdentDecl")
	proto.RegisterType((*Decl_FunctionDecl)(nil), "google.api.expr.checked.v1.Decl.FunctionDecl")
	proto.RegisterType((*Decl_FunctionDecl_Overload)(nil), "google.api.expr.checked.v1.Decl.FunctionDecl.Overload")
	proto.RegisterType((*Reference)(nil), "google.api.expr.checked.v1.Reference")
	proto.RegisterEnum("google.api.expr.checked.v1.Type_PrimitiveType", Type_PrimitiveType_name, Type_PrimitiveType_value)
	proto.RegisterEnum("google.api.expr.checked.v1.Type_WellKnownType", Type_WellKnownType_name, Type_WellKnownType_value)
}

func init() {
	proto.RegisterFile("proto/checked/v1/checked.proto", fileDescriptor_checked_21cbb30c47e02611)
}

var fileDescriptor_checked_21cbb30c47e02611 = []byte{
	// 1123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x6f, 0x4f, 0xe3, 0xc6,
	0x13, 0xc6, 0x89, 0x93, 0xd8, 0xe3, 0xc0, 0xcf, 0xbf, 0x55, 0x5b, 0x59, 0xa6, 0x02, 0x44, 0x55,
	0x89, 0x9e, 0x5a, 0x73, 0x70, 0x08, 0x5d, 0x7b, 0xaa, 0x4e, 0xe4, 0xf0, 0x15, 0x1f, 0x21, 0x89,
	0x8c, 0x01, 0x21, 0x55, 0x8d, 0x8c, 0xb3, 0xa1, 0x56, 0xfc, 0x4f, 0x6b, 0x27, 0x90, 0x2f, 0xd0,
	0xbe, 0xaa, 0xd4, 0x8f, 0xd3, 0x0f, 0xd4, 0x8f, 0xd0, 0x17, 0xed, 0xbb, 0x6a, 0xd7, 0xeb, 0x10,
	0x20, 0x25, 0xe1, 0xde, 0x8d, 0x77, 0xe7, 0x79, 0x66, 0x76, 0xf6, 0x99, 0x1d, 0xc3, 0x5a, 0x42,
	0xe2, 0x2c, 0xde, 0xf6, 0x7e, 0xc6, 0xde, 0x00, 0xf7, 0xb6, 0x47, 0x3b, 0x85, 0x69, 0xb0, 0x0d,
	0xa4, 0x5f, 0xc7, 0xf1, 0x75, 0x80, 0x0d, 0x37, 0xf1, 0x0d, 0x7c, 0x9b, 0x10, 0xa3, 0xd8, 0x1e,
	0xed, 0xe8, 0x9f, 0xe6, 0xd8, 0xd1, 0xce, 0x76, 0x3a, 0x8e, 0x32, 0xf7, 0x36, 0x87, 0xe8, 0xab,
	0x39, 0x64, 0x9b, 0x7d, 0x5d, 0x0d, 0xfb, 0xdb, 0x38, 0x4c, 0xb2, 0x31, 0xdf, 0xfc, 0xfc, 0xe1,
	0x66, 0x9a, 0x91, 0xa1, 0x97, 0xe5, 0xbb, 0x9b, 0xff, 0x94, 0x41, 0x79, 0x97, 0x07, 0x30, 0x6f,
	0x13, 0x82, 0x7e, 0x82, 0x65, 0x82, 0xfb, 0x98, 0xe0, 0xc8, 0xc3, 0xdd, 0xd0, 0x4d, 0xb4, 0xd2,
	0x46, 0x79, 0x4b, 0xd9, 0xfd, 0xd6, 0xf8, 0xef, 0xac, 0x8c, 0x29, 0xbc, 0x61, 0x17, 0xe0, 0x13,
	0x37, 0x31, 0xa3, 0x8c, 0x8c, 0xed, 0x3a, 0x99, 0x5a, 0x42, 0x6d, 0x90, 0xb2, 0x71, 0x92, 0x53,
	0x97, 0x19, 0xf5, 0xde, 0xa2, 0xd4, 0xce, 0x38, 0xb9, 0x63, 0xad, 0x65, 0xf9, 0x17, 0x7a, 0x0b,
	0x4a, 0x1a, 0x0f, 0x89, 0x87, 0xbb, 0x7e, 0xd4, 0x8f, 0xb5, 0xca, 0x86, 0xb0, 0xa5, 0xec, 0xae,
	0x3d, 0xe2, 0x1c, 0xed, 0x18, 0xa7, 0xcc, 0xcd, 0x8a, 0xfa, 0xb1, 0x0d, 0xe9, 0xc4, 0x46, 0x5f,
	0x83, 0x48, 0x3d, 0x34, 0x91, 0x21, 0xb5, 0x59, 0x48, 0x1a, 0xde, 0x66, 0x5e, 0x7a, 0x1f, 0xfe,
	0xff, 0xe8, 0x88, 0x48, 0x85, 0xf2, 0x00, 0x8f, 0x35, 0x61, 0x43, 0xd8, 0x2a, 0xdb, 0xd4, 0x44,
	0x6f, 0xa0, 0x32, 0x72, 0x83, 0x21, 0xd6, 0x4a, 0x8c, 0xf5, 0xcb, 0xa7, 0xce, 0x38, 0xe1, 0xb3,
	0x73, 0xcc, 0x77, 0xa5, 0xd7, 0x82, 0xfe, 0x23, 0xd4, 0xa7, 0xcf, 0x3b, 0x23, 0xc4, 0xfe, 0xfd,
	0x10, 0x1b, 0x4f, 0x85, 0xa0, 0x54, 0x53, 0xec, 0x1f, 0x44, 0x49, 0x50, 0x4b, 0x9b, 0x7f, 0x2a,
	0x20, 0xd2, 0x1d, 0xf4, 0x02, 0xca, 0xbd, 0x71, 0xc4, 0xc8, 0x95, 0xdd, 0xcf, 0x0a, 0xa2, 0x42,
	0x30, 0x86, 0x49, 0xd5, 0x74, 0xb4, 0x64, 0x53, 0x27, 0xf4, 0x12, 0xc4, 0x68, 0x18, 0x04, 0x2c,
	0xea, 0xca, 0xae, 0xfe, 0xc8, 0xb9, 0x35, 0x0c, 0x82, 0x73, 0x1a, 0xe8, 0x68, 0xc9, 0x66, 0x9e,
	0xa8, 0x05, 0x72, 0x42, 0xfc, 0xd0, 0xcf, 0xfc, 0x11, 0xd6, 0xca, 0x0c, 0x66, 0xcc, 0x4b, 0xd6,
	0xe8, 0x14, 0x08, 0xfa, 0x75, 0xb4, 0x64, 0xdf, 0x51, 0xa0, 0x0f, 0x50, 0xbb, 0x21, 0x6e, 0x92,
	0xe0, 0xfc, 0xce, 0x3e, 0x86, 0xad, 0x20, 0x40, 0x6d, 0x80, 0x1b, 0x1c, 0x04, 0xdd, 0x41, 0x14,
	0xdf, 0x44, 0x4c, 0x3c, 0x8b, 0xd0, 0x5d, 0xe0, 0x20, 0x38, 0xa6, 0x88, 0x22, 0xb9, 0x9b, 0x62,
	0x01, 0x1d, 0x81, 0x1c, 0xf8, 0x69, 0xd6, 0xa5, 0xf2, 0xd4, 0xaa, 0xac, 0xa0, 0x5f, 0xcd, 0xe5,
	0x6b, 0xfa, 0x69, 0xc6, 0xa9, 0xa4, 0x80, 0xdb, 0xc8, 0x04, 0x29, 0x74, 0x93, 0x9c, 0xa8, 0xc6,
	0x88, 0xb6, 0xe6, 0x12, 0x9d, 0xb8, 0x49, 0x71, 0xc2, 0x30, 0x37, 0xd1, 0x31, 0x48, 0xfd, 0x61,
	0xe4, 0x65, 0x7e, 0x1c, 0x69, 0x12, 0xa3, 0xf9, 0x66, 0x2e, 0xcd, 0x7b, 0x0e, 0x28, 0x72, 0x2a,
	0x08, 0xd0, 0x17, 0x50, 0x0f, 0x71, 0x9a, 0xba, 0xd7, 0x38, 0xcf, 0x4b, 0xde, 0x10, 0xb6, 0xe4,
	0xa3, 0x25, 0x5b, 0xe1, 0xab, 0x2c, 0xe2, 0x3a, 0x00, 0x6b, 0xf1, 0xc4, 0x25, 0x6e, 0xa8, 0x01,
	0x77, 0x91, 0xe9, 0x5a, 0x87, 0x2e, 0xa1, 0x7d, 0x10, 0x19, 0x5a, 0x59, 0x4c, 0xb8, 0x54, 0x48,
	0xd4, 0x1f, 0x19, 0x50, 0xc1, 0x84, 0xc4, 0x44, 0xab, 0xcf, 0x11, 0x6a, 0xee, 0x86, 0x1c, 0x58,
	0x76, 0xaf, 0xd2, 0x8c, 0xb8, 0x1e, 0xbf, 0x8f, 0x95, 0x05, 0xcf, 0x7f, 0xc0, 0x51, 0x3c, 0x7a,
	0xdd, 0x9d, 0xfa, 0xd6, 0x2d, 0x90, 0x8a, 0xfb, 0x42, 0xdf, 0x83, 0x8c, 0x03, 0x1c, 0xe6, 0xec,
	0xc2, 0x82, 0x7d, 0x28, 0x51, 0x08, 0xa3, 0xfa, 0x55, 0x80, 0x1a, 0xbf, 0x32, 0xf4, 0x06, 0xa4,
	0x01, 0x1e, 0x3f, 0x8f, 0xa9, 0x36, 0xc0, 0x63, 0x06, 0x7e, 0x0b, 0xc0, 0x9a, 0x3b, 0x87, 0x2f,
	0xfa, 0x20, 0xc8, 0x0c, 0xc3, 0x32, 0xf9, 0x5d, 0x80, 0xfa, 0xf4, 0xad, 0xa3, 0x03, 0x50, 0x08,
	0x4e, 0x87, 0x41, 0xf6, 0xbc, 0x8c, 0x20, 0x07, 0x15, 0xc5, 0x71, 0xc9, 0x35, 0xc3, 0xa7, 0x7c,
	0x8c, 0x2c, 0x50, 0x1c, 0x97, 0x5c, 0x53, 0x23, 0xd5, 0x43, 0xa8, 0x4f, 0xdf, 0x03, 0x42, 0x20,
	0x46, 0x6e, 0x98, 0xa7, 0x22, 0xdb, 0xcc, 0x46, 0x16, 0xfc, 0x8f, 0xa9, 0x0c, 0x67, 0x98, 0x3c,
	0x33, 0xd0, 0xca, 0x04, 0xc8, 0xc2, 0x6d, 0xa6, 0xb0, 0x7c, 0xef, 0x95, 0x40, 0x6b, 0xa0, 0x77,
	0x6c, 0xeb, 0xc4, 0x72, 0xac, 0x73, 0xb3, 0xeb, 0x5c, 0x76, 0xcc, 0xee, 0x59, 0xeb, 0xb4, 0x63,
	0xbe, 0xb3, 0xde, 0x5b, 0xe6, 0xa1, 0xba, 0x84, 0x24, 0x10, 0x1b, 0xed, 0x76, 0x53, 0x15, 0x90,
	0x0c, 0x15, 0xab, 0xe5, 0xec, 0xef, 0xa9, 0x25, 0x04, 0x50, 0x3d, 0xcb, 0xed, 0x32, 0xb5, 0x0f,
	0xdb, 0x67, 0x8d, 0xa6, 0xa9, 0x8a, 0xd4, 0x3e, 0x75, 0x6c, 0xab, 0xf5, 0x83, 0x5a, 0xa1, 0xee,
	0x8d, 0x4b, 0xc7, 0x3c, 0x55, 0xab, 0x9b, 0xe7, 0xb0, 0x7c, 0xef, 0x2d, 0x41, 0xeb, 0xb0, 0x7a,
	0x61, 0x36, 0x9b, 0xdd, 0xe3, 0x56, 0xfb, 0xa2, 0x35, 0x2b, 0x6a, 0x0d, 0xca, 0x07, 0xad, 0x4b,
	0x55, 0x40, 0xcb, 0x20, 0x3b, 0xd6, 0x89, 0x79, 0xea, 0x1c, 0x9c, 0x74, 0xd4, 0x12, 0xaa, 0x83,
	0x74, 0x78, 0x66, 0x1f, 0x38, 0x56, 0xbb, 0xa5, 0x96, 0x1b, 0x0a, 0xb0, 0x76, 0xeb, 0x0e, 0xfc,
	0xa8, 0xb7, 0xf9, 0x47, 0x05, 0xc4, 0x43, 0xec, 0x05, 0x33, 0x2b, 0xd8, 0x80, 0x8a, 0xdf, 0xc3,
	0x51, 0xc6, 0x45, 0xf3, 0xe2, 0xa9, 0xba, 0x51, 0x12, 0xc3, 0xa2, 0xde, 0xd4, 0xa2, 0x7d, 0xc6,
	0xa0, 0xf7, 0x9e, 0x98, 0xf2, 0xfc, 0x16, 0x63, 0x34, 0x85, 0xd8, 0x38, 0xd3, 0x84, 0x40, 0xff,
	0x45, 0x00, 0x79, 0x12, 0x03, 0xed, 0xf1, 0xa7, 0x62, 0x51, 0xfd, 0xe5, 0x0f, 0xc5, 0xce, 0xfd,
	0xd1, 0xb8, 0x3a, 0x6b, 0xa6, 0x37, 0xfd, 0x0c, 0x13, 0x37, 0xe0, 0x53, 0x91, 0xce, 0xd7, 0x5e,
	0xec, 0xb1, 0xf4, 0x65, 0x9b, 0x9a, 0xfa, 0x5f, 0xa5, 0xbb, 0x96, 0x60, 0xb9, 0x38, 0x20, 0xc7,
	0x23, 0x4c, 0x82, 0xd8, 0xed, 0xa5, 0x9a, 0xc0, 0x64, 0xb6, 0xff, 0xac, 0x73, 0x1a, 0x6d, 0x0e,
	0xb7, 0xef, 0x88, 0xf4, 0xdf, 0x4a, 0x20, 0x15, 0xeb, 0x68, 0x1d, 0x94, 0x62, 0xa7, 0xeb, 0xf7,
	0xf8, 0x45, 0x41, 0xb1, 0x64, 0xf5, 0xd0, 0x6b, 0xa8, 0x32, 0xdd, 0x2e, 0xae, 0x73, 0xee, 0x4f,
	0xa9, 0xef, 0x5e, 0xe5, 0x94, 0xfd, 0x7b, 0xc9, 0x36, 0x4c, 0x1e, 0xe5, 0xf4, 0x61, 0xc7, 0x8b,
	0x1f, 0xd1, 0xf1, 0x2f, 0xe1, 0x13, 0x3f, 0xed, 0xfa, 0x51, 0x9a, 0xb9, 0xf4, 0xf7, 0x71, 0x22,
	0x0a, 0x3a, 0x57, 0x25, 0x1b, 0xf9, 0xa9, 0xc5, 0xb7, 0x8a, 0xaa, 0x14, 0x65, 0xaf, 0x4e, 0xca,
	0x4e, 0xa5, 0xdb, 0xc3, 0x5e, 0x90, 0x4b, 0x37, 0x05, 0x79, 0xf2, 0x77, 0x34, 0x53, 0xbe, 0x0f,
	0x0a, 0xc6, 0x4f, 0x35, 0x55, 0xb0, 0x89, 0x14, 0xc4, 0x45, 0xa5, 0xd0, 0x78, 0x05, 0x6b, 0x5e,
	0x1c, 0x3e, 0x71, 0xf0, 0x46, 0x9d, 0xff, 0x96, 0x76, 0xe8, 0xe0, 0xe9, 0x08, 0x7f, 0x0b, 0xc2,
	0x55, 0x95, 0x0d, 0xa1, 0x57, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xd4, 0xbc, 0x68, 0xde,
	0x0b, 0x00, 0x00,
}
